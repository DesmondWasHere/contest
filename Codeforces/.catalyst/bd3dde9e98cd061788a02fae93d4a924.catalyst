{"title":{"en":"D. Yet Another Sorting Problem","ru":"D. Ещё одна задача на сортировку"},"contestId":"1591","problemIndex":"D","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Petya has an array of integers $$$a_1, a_2, \\ldots, a_n$$$. He only likes sorted arrays. Unfortunately, the given array could be arbitrary, so Petya wants to sort it.</p><p>Petya likes to challenge himself, so he wants to sort array using only $$$3$$$-cycles. More formally, in one operation he can pick $$$3$$$ <span class=\"tex-font-style-bf\">pairwise distinct</span> indices $$$i$$$, $$$j$$$, and $$$k$$$ ($$$1 \\leq i, j, k \\leq n$$$) and apply $$$i \\to j \\to k \\to i$$$ cycle to the array $$$a$$$. It simultaneously places $$$a_i$$$ on position $$$j$$$, $$$a_j$$$ on position $$$k$$$, and $$$a_k$$$ on position $$$i$$$, without changing any other element.</p><p>For example, if $$$a$$$ is $$$[10, 50, 20, 30, 40, 60]$$$ and he chooses $$$i = 2$$$, $$$j = 1$$$, $$$k = 5$$$, then the array becomes $$$[\\underline{50}, \\underline{40}, 20, 30, \\underline{10}, 60]$$$.</p><p>Petya can apply arbitrary number of $$$3$$$-cycles (possibly, zero). You are to determine if Petya can sort his array $$$a$$$, i.&nbsp;e. make it non-decreasing.</p>","ru":"<p>У Пети есть массив целых чисел $$$a_1, a_2, \\ldots, a_n$$$. Ему нравятся только отсортированные массивы. К сожалению, имеющийся массив может быть произвольным, поэтому Петя хочет его отсортировать.</p><p>Петя любит придумывать различные усложнения, поэтому он хочет осортировать массив, используя только $$$3$$$-циклы. Более формально, за одну операцию он может выбрать $$$3$$$ <span class=\"tex-font-style-bf\">попарно различные</span> позиции $$$i$$$, $$$j$$$ и $$$k$$$ ($$$1 \\leq i, j, k \\leq n$$$) и применить цикл ($$$i \\to j \\to k \\to i$$$) к массиву $$$a$$$. Это действие одновременно положит значение $$$a_i$$$ на позицию $$$j$$$, значение $$$a_j$$$ на позицию $$$k$$$, и значение $$$a_k$$$ на позицию $$$i$$$, а остальные элементы массива останутся неизменными.</p><p>Например, если массив $$$a$$$ равен $$$[10, 50, 20, 30, 40, 60]$$$, и Петя выбирает $$$i = 2$$$, $$$j = 1$$$ и $$$k = 5$$$, то массив изменяется на $$$[\\underline{50}, \\underline{40}, 20, 30, \\underline{10}, 60]$$$.</p><p>Петя может применять произвольное количество $$$3$$$-циклов (возможно, ноль). Определите, может ли Петя отсортировать массив $$$a$$$, то есть сделать его неубывающим.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^5$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 5 \\cdot 10^5$$$)&nbsp;— the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq n$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Во входных данных находятся несколько наборов входных данных. В первой строке находится одно целое число $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^5$$$)&nbsp;— количество наборов входных данных. Далее следуют наборы входных данных.</p><p>Первая строка набора входных данных содержит единственное целое число $$$n$$$ ($$$1 \\leq n \\leq 5 \\cdot 10^5$$$)&nbsp;— длину массива $$$a$$$.</p><p>Вторая строка содержит $$$n$$$ целых чисел $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq n$$$).</p><p>Гарантируется, что сумма значений $$$n$$$ по всем наборам входных данных не превосходит $$$5 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, print \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes) if Petya can sort the array $$$a$$$ using $$$3$$$-cycles, and \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes) otherwise. You can print each letter in any case (upper or lower).</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите «<span class=\"tex-font-style-tt\">YES</span>» (без кавычек), если Петя может отсортировать массив $$$a$$$ с помощью $$$3$$$-циклов, и «<span class=\"tex-font-style-tt\">NO</span>» (без кавычек) в противном случае. Вы можете выводить каждую букву в любом регистре (верхнем или нижнем).</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the $$$6$$$-th test case Petya can use the $$$3$$$-cycle $$$1 \\to 3 \\to 2 \\to 1$$$ to sort the array.</p><p>In the $$$7$$$-th test case Petya can apply $$$1 \\to 3 \\to 2 \\to 1$$$ and make $$$a = [1, 4, 2, 3]$$$. Then he can apply $$$2 \\to 4 \\to 3 \\to 2$$$ and finally sort the array.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В $$$6$$$-м наборе входных данных Петя может применить $$$3$$$-цикл $$$1 \\to 3 \\to 2 \\to 1$$$ для сортировки массива.</p><p>В $$$7$$$-м наборе входных данных Петя может сначала применить $$$1 \\to 3 \\to 2 \\to 1$$$, получив $$$a = [1, 4, 2, 3]$$$. Затем он может применить $$$2 \\to 4 \\to 3 \\to 2$$$ и окончательно отсортировать массив.</p>"},"sampleTestcases":[{"id":1639417102714,"input":"7\n1\n1\n2\n2 2\n2\n2 1\n3\n1 2 3\n3\n2 1 3\n3\n3 1 2\n4\n2 1 4 3\n","output":"YES\nYES\nNO\nYES\nNO\nYES\nYES\n"}],"submitUrl":"https://codeforces.com/contest/1591/submit","language":"c++","isPartOfContest":true}